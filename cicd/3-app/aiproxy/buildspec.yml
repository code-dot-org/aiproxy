version: 0.2

env:
  secrets-manager:
    DOCKER_HUB_USERNAME: cicd/docker-hub/username
    DOCKER_HUB_PAT: cicd/docker-hub/pat

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - pip install cfn-lint
  
  pre_build:
    commands:
      - echo Logging in to Docker Hub...
      - echo $DOCKER_HUB_PAT | docker login -u $DOCKER_HUB_USERNAME --password-stdin

      - echo "Logging in to AWS ECR..."
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - AWS_REGION=us-east-1
      - ECR_REGISTRY="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}
  
  build:
    # This will build and push the docker image to ECR and package the
    # Cloudformation template to be passed as an Artifact to future pipeline
    # steps. It will also run unit tests and linting.
    commands:
      - set -e

      - echo ECR_REPOSITORY=$ECR_REPOSITORY
      - echo BRANCH=$BRANCH

      - cd $CODEBUILD_SRC_DIR

      - ./ci-lint.sh

      - echo "Building Docker Image..."
      - IMAGE_NAME=aiproxy
      - IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7} # short commit hash
      - docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .

      - echo "Running Unit Tests..."
      - docker run -e PYTHONPATH=/app --rm ${IMAGE_NAME}:${IMAGE_TAG} /bin/bash -c "coverage run -m pytest $@ && coverage report -m"

      - echo "Pushing Docker Image to ECR..."
      - docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${ECR_REPOSITORY}:${IMAGE_TAG}
      - docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${ECR_REPOSITORY}:latest
      - docker push ${ECR_REPOSITORY}:${IMAGE_TAG}
      - docker push ${ECR_REPOSITORY}:latest

      - echo "Linting cloudformation..."
      - cd $CODEBUILD_SRC_DIR
      - cp cicd/3-app/aiproxy/template.yml ./template.yml
      - cfn-lint template.yml
      - cat template.yml
      
      - echo "Creating environment config..."
      - IMAGE_URI="${ECR_REPOSITORY}:${IMAGE_TAG}"
      - cicd/3-app/aiproxy/config/create-environment-config.sh
      
      - echo "Packaging Cloudformation Template..."
      - aws cloudformation package --template-file template.yml --s3-bucket $ARTIFACT_STORE --s3-prefix package --output-template-file packaged-app-template.yml

      - echo "Running ls command..."
      - ls
artifacts:
  files: '**/*'
